import React from 'react'
import one from "./img/1.jpg"
import two from "./img/2.jpg"
import three from "./img/3.jpg"
import fore from "./img/4.jpg"
import fife from "./img/5.jpg"
import sex from "./img/6.jpg"
import seven from "./img/7.jpg"
function TypeConversion() {
  return (
    <div>
        <h1>Տիպերի փոխակերպում</h1>
        <p>
            Սովորաբար օպերատորները և ֆունկցիաները ավտոմատ կերպով իրենց փոխանցված արժեքները վերագրում են այն տիպի որը նա պետքե լինի
            օրինակ alert ֆունկցիան իրեն փոխանցած ցանկացած արժեք վերագրում է տեքստային տիպի,
            Մաթեմաթիկական օպերատորները արժեքները դարձնում են թվային Տիպերի

        </p>
        <p>
            բայց կան իրավիճակներ երբ մեզ հարկավոր է ուղակիորեն որոշել արժեքի տիպը 
        </p>
        <h3>Տողաին փոխակերպում</h3>
        <p>
        Տողաին փոխակերպում տեղի է ունենում այն ժամանակ երբ պետքե ներկայացնենք ինչ որ բան Տողաին տիպով 
        օրինակ alert(value) փոխակերպում է տողային տիպի 
        բացի դե մենք կարողենք օգտագործել String(value) ֆունկցիան, որպիսզի փոխենք արժեքը տողային տիպի 
        </p>
        <img src={one} />
        <p>
            փոխակերպումը տեղի է ունենում ակնհայտ կերպով false դառնում է "false", null դառնում է "null" և այսպես շարունակ
        </p>
        <h3>Թվային փոխակերպում</h3>
        <p>
            թվային փոխակերպում տեղի է ունենում Մաթեմաթիկական ֆունկցիաներում և արտահայտություններում 
            օրինակ երբ բաժանման օպերատորը / օգտագործվումա ոչ թվերի հետ 
        </p>
        <img src={two} />
        <p>
            մենք կարողենք օգտագործել Number(value) ֆունկցիան որպիսզի value ին հստակ տանք թվային արժեք 
        </p>
        <img src={three} />
        <p>
            այս մոտեցում ը մեզ կարողե պետք գալ այն ժամանակ երբ մենք սպասում ենք ստանալ թիվ տողային արժեքից 
            օրինակ ֆորմաների տեքստային արժեքներից
        </p>
        <p>
            եթե տողը չի կարող դառնալ թիվ այդ պարագայում մենք կստանանք  NaN օրինակ 

        </p>
        <img src={fore} />
        <img src={fife} />
        <p>
            նկատեք որ null և undefined իրենց դրսևորումեն տարբեր կերպ,
            Այսպես null դառնում է 0 իսկ  undefined ը դառնում է NaN
            Մաթեմատիկական օպերատորների մեծ մասը նույնպես կատարում է այս փոխակերպումը, ինչպես կտեսնենք հաջորդ գլխում։
        </p>
        <h3>
        Բուլյան փոխակերպում  
        </h3>
        <p>
        Բուլյան փոխակերպում ամենա հասարակնե 
        որը տեղի է ունենում Բուլյան գործողության արդյունքում ավելի ուշ մենք կծանոթանանք պայմանի օպերատորներին և 
        մանրամասն կնայենք այն, բայց նույնպես մենք կարողենք հստակ նշել տիպը Boolean(value) ֆունկցիայի օգնությամբ 

        փոխակերպման կանոները 
        արժեքը որը ինտուիտիվ կերպով դատարկ է, օրինակ 0, դատարկ տողը null, undefined և NaN դառնումեն false.
        մնացաժ բոլոր արժեքները դառնում են true.
        օրինակ 
        </p>
        <img src={sex} />
        <p>
            ուշադրություն դարրեք որ տողը 0 ով "0" դա համարվում է true
            JavaScript, ում եթե տողը դատարկ չէ այն համարվում է true
        </p>
        <img src={seven} />
    </div>
  )
}

export default TypeConversion